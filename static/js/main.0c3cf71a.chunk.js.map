{"version":3,"sources":["components/Header/Header.js","components/Card/Card.js","components/SortCard/SortCard.js","components/Main/Main.js","components/Popup/Popup.js","utils/Api.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","handleInput","handleSubmit","isDisable","isSort","handleClearBtn","tag","handleSort","className","onSubmit","value","placeholder","onChange","disable","type","onClick","Card","firstImg","secondImg","alt","cardClick","imgClick","undefined","src","SortCard","cards","sortCards","filter","data","keyword","map","img","Main","keywords","Popup","popupText","isVisible","onClose","getCard","key","fetch","method","headers","then","res","json","App","React","useState","setTag","card","setCard","setKeywords","disableButton","setDisableButton","popupVisible","setPopupVisible","setPopupText","setSort","uniqueTag","setUniqueTag","isValid","setValid","closePopup","getRandomCard","api","image_url","catch","finally","arr","splitArr","split","setTimeout","length","Promise","all","firstCard","secondCard","evt","target","test","preventDefault","handleUnsort","item","pos","indexOf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAuBeA,MApBf,YAAmG,IAAjFC,EAAgF,EAAhFA,YAAaC,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,WAEjF,OACI,wBAAQC,UAAU,SAAlB,SACI,uBAAMA,UAAU,eAAeC,SAAUP,EAAzC,UACI,uBAAOQ,MAAOJ,EAAKK,YAAY,gEAAcH,UAAU,gBAAgBI,SAAUX,IACjF,wBAAQY,QAASV,EACbW,KAAK,SACLN,UAAS,+CAA0CL,GAAa,mBAFpE,SAGUA,EAA0B,qDAAd,2DAEtB,wBAAQW,KAAK,SAASN,UAAU,sCAAsCO,QAASV,EAA/E,8DACA,wBAAQS,KAAK,SAASN,UAAU,sCAAsCO,QAASR,EAA/E,SACMH,EAA0B,6FAAjB,mF,YCQhBY,MArBf,YAAuD,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,UAEhCC,EAAW,WACbD,EAAUD,IAGd,OACI,qBAAKX,UAAU,OAAf,cACmBc,IAAdJ,EACG,qBAAKK,IAAKN,EAAUE,IAAKA,EAAKX,UAAU,cAAcO,QAASM,IAE/D,sBAAKb,UAAU,aAAf,UACI,qBAAKe,IAAKN,EAAUE,IAAKA,EAAKX,UAAU,gCAAgCO,QAASM,IACjF,qBAAKE,IAAKL,EAAWC,IAAKA,EAAKX,UAAU,gCAAgCO,QAASM,U,MCSvFG,MArBf,YAA6C,IAAzBC,EAAwB,EAAxBA,MAAOnB,EAAiB,EAAjBA,IAAKc,EAAY,EAAZA,UAEtBM,EAAYD,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAYvB,KAExD,OACI,0BAASE,UAAU,OAAnB,UACI,oBAAIA,UAAU,cAAd,SAA6BF,IAC7B,qBAAKE,UAAU,aAAf,SACKkB,EAAUI,KAAI,SAAAF,GAAI,OACf,cAAC,EAAD,CACIX,SAAUW,EAAKG,IAAI,GACnBb,UAAWU,EAAKG,IAAI,GACpBZ,IAAKS,EAAKC,QACVT,UAAWA,GAJJQ,EAAKC,kBCmBrBG,MA3Bf,YAAqD,IAAtCP,EAAqC,EAArCA,MAAOrB,EAA8B,EAA9BA,OAAQ6B,EAAsB,EAAtBA,SAAUb,EAAY,EAAZA,UAEpC,OACI,yBAASZ,UAAU,OAAnB,SACMJ,EAYD6B,EAASH,KAAI,SAAAF,GAAI,OACd,cAAC,EAAD,CACAH,MAAOA,EACPnB,IAAKsB,EACLR,UAAWA,GAHIQ,MAZf,qBAAKpB,UAAS,uBAAkBJ,GAAU,oBAA1C,SACMqB,EAAMK,KAAI,SAAAF,GAAI,OAChB,cAAC,EAAD,CACAX,SAAUW,EAAKG,IAAI,GACnBb,UAAWU,EAAKG,IAAI,GACpBZ,IAAKS,EAAKC,QACVT,UAAWA,GAJAQ,EAAKC,iB,MCErBK,MAXf,YAAmD,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAGnC,OACI,sBAAK7B,UAAS,gBAAW4B,GAAa,qBAAtC,UACI,mBAAG5B,UAAU,cAAb,SAA4B2B,IAC5B,wBAAQ3B,UAAU,eAAeO,QAASsB,EAA1C,sBCTCC,EAAU,SAACC,EAAKjC,GACzB,OAAOkC,MAAM,gDAAD,OAAiDD,EAAjD,gBAA4DjC,GAAO,CAC3EmC,OAAQ,MACRC,QAAS,CACL,OAAU,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,WC0JRC,MA1Jf,WAAgB,IAAD,EAESC,IAAMC,SAAS,IAFxB,mBAEN1C,EAFM,KAED2C,EAFC,OAGWF,IAAMC,SAAS,IAH1B,mBAGNE,EAHM,KAGAC,EAHA,OAImBJ,IAAMC,SAAS,IAJlC,mBAINf,EAJM,KAIImB,EAJJ,OAK6BL,IAAMC,UAAS,GAL5C,mBAKNK,EALM,KAKSC,EALT,OAM2BP,IAAMC,UAAS,GAN1C,mBAMNO,EANM,KAMQC,EANR,OAOqBT,IAAMC,SAAS,IAPpC,mBAONb,EAPM,KAOKsB,EAPL,OAQaV,IAAMC,UAAS,GAR5B,mBAQN5C,EARM,KAQEsD,EARF,OASqBX,IAAMC,SAAS,IATpC,mBASNW,EATM,KASKC,EATL,OAUeb,IAAMC,UAAS,GAV9B,mBAUNa,EAVM,KAUGC,EAVH,KAaPvB,EAAM,mCAUNwB,EAAa,WACjBP,GAAgB,IA2DZQ,EAAgB,YDhFK,SAACzB,GAC1B,OAAOC,MAAM,gDAAD,OAAiDD,GAAO,CAChEE,OAAQ,MACRC,QAAS,CACL,OAAU,sBAGjBC,MAAK,SAACC,GAAD,OAASA,EAAIC,WC0EnBoB,CAAkB1B,GACfI,MAAK,SAACf,GACLuB,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAACrB,QAAQ,GAAD,OAAKvB,GAAOyB,IAAK,CAACH,EAAKA,KAAKsC,kBAEvDC,OAAM,WACLX,GAAgB,GAChBC,EAAa,uGAEdW,SAAQ,WACPd,GAAiB,OAKjBhB,EAAU,WACd,IA/BoB+B,EA+BdC,EAAWhE,EAAIiE,MAAM,MACf,UAARjE,GACFkE,WAAWR,EAAe,UAER1C,IAAhBgD,EAAS,IAA4B,UAARhE,GAtDjC2D,EAAY1B,EAAKjC,GACdqC,MAAK,SAACf,GACoB,IAArBA,EAAKA,KAAK6C,QACZjB,GAAgB,GAChBC,EAAa,uIAEbN,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAACrB,QAAQ,GAAD,OAAKvB,GAAOyB,IAAK,CAACH,EAAKA,KAAKsC,kBAGzDC,OAAM,WACLX,GAAgB,GAChBC,EAAa,uGAEdW,SAAQ,WACPd,GAAiB,WA2CDhC,IAAhBgD,EAAS,IAA4B,UAARhE,IAtCb+D,EAuCLC,EAtCfI,QAAQC,IAAI,CAACV,EAAY1B,EAAK8B,EAAI,IAAKJ,EAAY1B,EAAK8B,EAAI,MACzD1B,MAAK,YAA8B,IAAD,mBAA3BiC,EAA2B,KAAhBC,EAAgB,KACjC1B,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAACrB,QAAQ,GAAD,OAAKvB,GAAOyB,IAAK,CAAC6C,EAAUhD,KAAKsC,UAAWW,EAAWjD,KAAKsC,kBAEvFC,OAAM,WACLX,GAAgB,GAChBC,EAAa,uGAEdW,SAAQ,WACPd,GAAiB,QA6DvB,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,CAAQP,YA7HQ,SAAC6E,GACnB7B,EAAO6B,EAAIC,OAAOrE,OAElBoD,EADc,gBACCkB,KAAKF,EAAIC,OAAOrE,SA2H3BR,aA9Ba,SAAC4E,GAClBA,EAAIG,kBACY,IAAZpB,GACFE,IACAT,GAAiB,GACjBF,EAAY,GAAD,mBAAKnB,GAAL,CAAe3B,KAC1BgC,MAEAkB,GAAgB,GAChBC,EAAa,uLAsBXtD,UAAWkD,EACXhD,eAlBiB,SAACyE,GACtBA,EAAIG,iBACJ9B,EAAQ,IACRF,EAAO,IACPW,EAAa,IACbR,EAAY,KAcR9C,IAAKA,EACLC,WAvGgB,SAACuE,GACpB1E,EARkB,SAAC0E,GACpBA,EAAIG,iBACJrB,EAAa,IACbF,GAAQ,GAKoBwB,CAAaJ,GAhBxB,SAACA,GAClBA,EAAIG,iBACJ,IAAMtB,EAAY1B,EAASN,QAAO,SAACwD,EAAMC,EAAKf,GAAZ,OAAoBA,EAAIgB,QAAQF,KAAUC,KAC5ExB,EAAaD,GACbD,GAAQ,GAYEnD,CAAWuE,IAuGjB1E,OAAQA,IACV,cAAC,EAAD,CAAMqB,MAAOyB,EAAM9C,OAAQA,EAAQ6B,SAAU0B,EAAWvC,UAbrC,SAACd,GACtB2C,EAAO3C,MAaL,cAAC,EAAD,CAAO6B,UAAWA,EAAWC,UAAWmB,EAAclB,QAAS0B,QChJtDuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c3cf71a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header({ handleInput, handleSubmit, isDisable, isSort, handleClearBtn, tag, handleSort}) {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <form className=\"header__form\" onSubmit={handleSubmit}>\r\n                <input value={tag} placeholder=\"Введите тег\" className=\"header__input\" onChange={handleInput} />\r\n                <button disable={isDisable}\r\n                    type=\"submit\"\r\n                    className={`header__button header__button_submit ${isDisable && 'header__disable'}`}>\r\n                        {!isDisable ? 'Загрузить' : 'Загрузка..'}\r\n                </button>\r\n                <button type=\"button\" className=\"header__button header__button_reset\" onClick={handleClearBtn}>Очистить</button>\r\n                <button type=\"button\" className=\"header__button header__button_unite\" onClick={handleSort}>\r\n                    {!isSort ? 'Группировать' : 'Разгруппировать'}\r\n                </button>\r\n            </form>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card({ firstImg, secondImg, alt, cardClick}) {\r\n\r\n    const imgClick = () => {\r\n        cardClick(alt)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            {secondImg === undefined ? \r\n                <img src={firstImg} alt={alt} className=\"card__image\" onClick={imgClick}/>\r\n                :\r\n                <div className=\"card__wrap\">\r\n                    <img src={firstImg} alt={alt} className=\"card__image card__image_unite\" onClick={imgClick}/>\r\n                    <img src={secondImg} alt={alt} className=\"card__image card__image_unite\" onClick={imgClick}/>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './SortCard.css';\r\nimport Card from '../Card/Card';\r\n\r\nfunction SortCard({ cards, tag, cardClick}) {\r\n\r\n    const sortCards = cards.filter(data => data.keyword === tag)\r\n\r\n    return (\r\n        <section className=\"sort\">\r\n            <h2 className=\"sort__title\">{tag}</h2>\r\n            <div className=\"sort__wrap\">\r\n                {sortCards.map(data => (\r\n                    <Card key={data.keyword}\r\n                        firstImg={data.img[0]}\r\n                        secondImg={data.img[1]}\r\n                        alt={data.keyword}\r\n                        cardClick={cardClick}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SortCard;","import React from 'react';\r\nimport './Main.css';\r\nimport Card from '../Card/Card';\r\nimport SortCard from '../SortCard/SortCard';\r\n\r\nfunction Main({cards, isSort, keywords, cardClick}) {\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            {!isSort ? \r\n                <div className={`main__cards ${!isSort && 'main__cards_open'}`}>\r\n                    {(cards.map(data => (\r\n                    <Card key={data.keyword}\r\n                    firstImg={data.img[0]}\r\n                    secondImg={data.img[1]}\r\n                    alt={data.keyword}\r\n                    cardClick={cardClick}\r\n                    />\r\n                    )))}\r\n                </div> \r\n            :\r\n            (keywords.map(data => (\r\n                <SortCard key={data}\r\n                cards={cards}\r\n                tag={data}\r\n                cardClick={cardClick}\r\n                />\r\n            )))}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './Popup.css';\r\n\r\nfunction Popup({ popupText, isVisible, onClose }) {\r\n\r\n\r\n    return (\r\n        <div className={`popup ${isVisible && 'popup__visibility'}`}>\r\n            <p className=\"popup__text\">{popupText}</p>\r\n            <button className=\"popup__close\" onClick={onClose}>&times;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;","export const getCard = (key, tag) => {\r\n    return fetch(`https://api.giphy.com/v1/gifs/random?api_key=${key}&tag=${tag}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n        }\r\n    })\r\n    .then((res) => res.json())\r\n}\r\n\r\nexport const getCardRandom = (key) => {\r\n    return fetch(`https://api.giphy.com/v1/gifs/random?api_key=${key}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n        }\r\n    })\r\n    .then((res) => res.json())\r\n}","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Popup from '../Popup/Popup';\nimport * as api from '../../utils/Api';\n\nfunction App() {\n\n  const [tag, setTag] = React.useState('');\n  const [card, setCard] = React.useState([]);\n  const [keywords, setKeywords] = React.useState([])\n  const [disableButton, setDisableButton] = React.useState(false);\n  const [popupVisible, setPopupVisible] = React.useState(false);\n  const [popupText, setPopupText] = React.useState('');\n  const [isSort, setSort] = React.useState(false);\n  const [uniqueTag, setUniqueTag] = React.useState([]);\n  const [isValid, setValid] = React.useState(false)\n\n  //Api key\n  const key = 'i25iMmapAhnCyZ4sKNBzce6vrGfqI6hX'\n\n  //Валидация формы\n  const handleInput = (evt) => {\n    setTag(evt.target.value)\n    const regEx = /[a-zA-Z](,)?/g;\n    setValid(regEx.test(evt.target.value))\n  }\n\n  //Закрытие popup\n  const closePopup = () => {\n    setPopupVisible(false)\n  }\n\n  //Сортировка карточек\n  const handleSort = (evt) => {\n    evt.preventDefault()\n    const uniqueTag = keywords.filter((item, pos, arr) => arr.indexOf(item) === pos)\n    setUniqueTag(uniqueTag)\n    setSort(true)\n  }\n\n  //Разгруппировка карточек\n  const handleUnsort = (evt) => {\n    evt.preventDefault()\n    setUniqueTag([])\n    setSort(false)\n  }\n\n  //Обработчки кнопки сортировки \n  const handleSortBtn = (evt) => {\n    !isSort ? handleSort(evt) : handleUnsort(evt)\n  }\n\n  //Получение одной карточки\n  const getSingleCard = () => {\n    api.getCard(key, tag)\n      .then((data) => {\n        if (data.data.length === 0) {\n          setPopupVisible(true)\n          setPopupText('По тегу ничего не найдено')\n        } else {\n          setCard([...card, {keyword: `${tag}`, img: [data.data.image_url]}])\n        }\n      })\n      .catch(() => {\n        setPopupVisible(true)\n        setPopupText('Произошла http ошибка')\n      })\n      .finally(() => {\n        setDisableButton(false)\n      })\n  }\n\n  //Получение мульткарточки\n  const getMultiCard = (arr) => {\n    Promise.all([api.getCard(key, arr[0]), api.getCard(key, arr[1])])\n      .then(([firstCard, secondCard]) => {\n        setCard([...card, {keyword: `${tag}`, img: [firstCard.data.image_url, secondCard.data.image_url]}])\n      })\n      .catch(() => {\n        setPopupVisible(true)\n        setPopupText('Произошла http ошибка')\n      })\n      .finally(() => {\n        setDisableButton(false)\n      })\n  }\n  \n  //Получение рандомной карточки\n  const getRandomCard = () => {\n    api.getCardRandom(key)\n      .then((data) => {\n        setCard([...card, {keyword: `${tag}`, img: [data.data.image_url]}])\n      })\n      .catch(() => {\n        setPopupVisible(true)\n        setPopupText('Произошла http ошибка')\n      })\n      .finally(() => {\n        setDisableButton(false)\n      })\n  }\n\n  //Получение карточек\n  const getCard = () => {\n    const splitArr = tag.split(', ') //проверяем мультитег\n    if (tag === 'delay') {\n      setTimeout(getRandomCard, 5000)\n    }\n    if (splitArr[1] === undefined && tag !== 'delay') {\n      getSingleCard()\n    } \n    if (splitArr[1] !== undefined && tag !== 'delay') {\n      getMultiCard(splitArr)\n    }\n  }\n\n  //Обработчик формы\n  const formSubmit = (evt) => {\n    evt.preventDefault()\n    if (isValid === true) {\n      closePopup();\n      setDisableButton(true);\n      setKeywords([...keywords, tag]);\n      getCard();\n    } else {\n      setPopupVisible(true);\n      setPopupText('Разрешены только латинские буквы')\n    }\n  }\n\n  //Удаление карточек \n  const handleClearBtn = (evt) => {\n    evt.preventDefault();\n    setCard([]);\n    setTag('');\n    setUniqueTag([])\n    setKeywords([])\n  }\n\n  //Обработчик клика по карточке\n  const handleImgClick = (tag) => {\n    setTag(tag)\n  }\n\n  return (\n    <div className=\"app\">\n      <Header handleInput={handleInput}\n        handleSubmit={formSubmit}\n        isDisable={disableButton}\n        handleClearBtn={handleClearBtn}\n        tag={tag}\n        handleSort={handleSortBtn}\n        isSort={isSort}/>\n      <Main cards={card} isSort={isSort} keywords={uniqueTag} cardClick={handleImgClick}/>\n      <Popup popupText={popupText} isVisible={popupVisible} onClose={closePopup}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}